hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
?renderDataTable
load_all()
document()
insall()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
paste0('tinymce.init({
inline: true,
selector:".shinytinymce",
plugins: ["advlist autolink lists link image charmap print preview anchor",
"searchreplace visualblocks code fullscreen",
"insertdatetime media table contextmenu paste"],
toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
});')
load_all()
document()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Hi there'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
paste0('x',NULL)
#Inline Editor
inline_opts <-
'inline: true,
plugins: ["advlist autolink lists link image charmap print preview anchor",
"searchreplace visualblocks code fullscreen",
"insertdatetime media table contextmenu paste"],
toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"'
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', paste0('Options used: ', inline_opts), inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
#Inline Editor
inline_opts <-
'inline: true,
plugins: ["advlist autolink lists link image charmap print preview anchor",
"searchreplace visualblocks code fullscreen",
"insertdatetime media table contextmenu paste"],
toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"'
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'This is an inline tinyMCE editor embedded in a text block.  Click to edit.', inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'This is an inline tinyMCE editor embedded in a text block.  Click to edit.', inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'This is an inline <strong>tinyMCE editor<\strong> embedded in a text block.  Click to edit.', inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'This is an inline <strong>tinyMCE editor</strong> embedded in a text block.  Click to edit.', inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', HTML('<p>This is an inline <strong>tinyMCE editor</strong> embedded in a text block.  Click to edit.</p>'), inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1',
#HTML('<p>This is an inline <strong>tinyMCE editor</strong> embedded in a text block.  Click to edit.</p>'),
HTML('This is'),
inline_opts),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
now()
date()
?date
#Update Editor
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', paste0('The date is: ', date())),
actionButton('update_editor1', 'Update Editor'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
observe({
input$update_editor1
updateTinyMCE('editor1', paste0('The date is: ', date()))
})
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
load_all()
document()
install()
#Basic Example
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
output$editor1_content <- renderPrint({input$editor1})
}
))
#Update Editor
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', paste0('The date is: ', date())),
actionButton('update_editor1', 'Update Editor'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
observe({
input$update_editor1
updateTinyMCE(session, 'editor1', paste0('The date is: ', date()))
})
output$editor1_content <- renderPrint({input$editor1})
}
))
#Update Editor
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Update button has been pressed 0 times'),
actionButton('update_editor1', 'Update Editor'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
observe({
updateTinyMCE(session, 'editor1', paste0('Update button has been pressed ', input$update_editor1-1,' times'))
})
output$editor1_content <- renderPrint({input$editor1})
}
))
#Update Editor
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Update button has been pressed 0 times'),
actionButton('update_editor1', 'Update Editor'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
observe({
updateTinyMCE(session, 'editor1', paste0('Update button has been pressed ', input$update_editor1,' times'))
})
output$editor1_content <- renderPrint({input$editor1})
}
))
#Update Editor
runApp(list(
ui = fluidPage(
fluidRow(
column(6, offset = 3,
hr(),
h2('tinyMCE Editor:'),
tinyMCE('editor1', 'Update button has been pressed 0 times'),
br(),
actionButton('update_editor1', 'Update Editor'),
hr(),
h2('Editor Content:'),
verbatimTextOutput('editor1_content')
)
)
),
server = function(input, output, session) {
observe({
updateTinyMCE(session, 'editor1', paste0('Update button has been pressed ', input$update_editor1,' times'))
})
output$editor1_content <- renderPrint({input$editor1})
}
))
load_all()
document()
install()
load_all()
library(devtools)
load_all()
document()
install()
load_all()
library(devtools)
load_all()
document()
install()
load_all()
devtools()
library(devtools)
load_all()
document()
install()
library(devtools)
load_all()
document()
install()
load_all()
load_all()
document()
install()
library(devtools)
load_all()
load_all()
load_all()
document()
install()
load_all()
library(devtools)
load_all()
document()
install()
load_all()
document()
install()
load_all()
document()
install()
library(devtools)
library(shinyMCE)
is.function(tinyMCE)
expect_true(is.function(tinyMCE))
library(testthat)
expect_true(is.function(tinyMCE))
?test_package
load_all()
document()
install()
test_dir("inst/tests/")
getwd()
test_dir("./inst/tests/")
test_dir("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/")
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/testthat.R/")
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat.R/")
install()
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat.R/")
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat/test-shinyMCE.R/")
source("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat/test-shinyMCE.R/")
source("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat/test-shinyMCE.r")
?test_that
source("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat/test-shinyMCE.r")
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/testthat.R/")
load_all()
document()
install()
test_file("/Users/cccnyc1mal/Desktop/dev_software/shinyMCE/tests/test_all.R/")
load_all()
document()
install()
library(staticdocs)
build_site()
build_site()
